/**************************************************************
****************** How To Connect To Database *****************
***************************************************************/

$dsn = "mysql:host=localhost;dbname=DatabaseName;charset=utf8";

$host = "root";

$pass = "";

$options = array( // YOU CAN PASS OPTIONS TO CONNEXION
    PDO::MYSQL_ATTR_INIT_COMAND => 'SET NAMES uft8'
);

try{

    // TRY TO CONNECT TO DATABASE
    $db = new PDO($dsn, $host, $pass); // PDO Extension    


    // HOW TO SET PDO ATTRIBUTES
    $db->setAttriute(property, value); // see manual 


    echo "Your Connection To Database Have been successfully";

}catch(PDOException $e){

    echo "Failed To Connect To Database " + $e->getMessage();

}


/**************************************************************
************** Deal With Databases Using Command **************
***************************************************************/

===============================================================
================= Access to mysql command =====================

=> mysql -u root

===============================================================

===============================================================
============== Database create drop use show ==================

=> CREATE DATABASE IF NOT EXISTS zakaria;

=> USE DatabaseName

=> SHOW DATABASES;

=> SHOW DATABASES LIKE 'DatabaseName';

=> DROP DATABASE IF EXISTS 'databaseName';

===============================================================

===============================================================
============== Tables create, tableStructure  ==================

=> CREATE TABLE [IF NOT EXISTS] tableName(
    id int(4),
    name varchar(255),
    email varchar(255)
);

=> DESCRIBE tableName;  // shows the table structure

=> SHOW COLUMNS FROM tableName; // shows the table structure

=> SHOW FILEDS FROM tableName; // shows the table structure

=> SHOW TABLE STATUS; // shows the status of the table

=> SHOW CREATE TABLE tableName; // shows the command that created the table 

=> DROP TABLE IF EXISTS tableName; // drops the table

===============================================================

===============================================================
============== Tables rename, alter table  ==================


=> RENAME TABLE tableName TO newName; 

=> ALTER TABLE tableName field = value; 
    EX: ALTER TABLE tableName ENGINE = INNODB;

===============================================================

===============================================================
======================== Alter Table  ========================


=> ALTER TABLE tableName ADD filedName type postion[first, last, after *****];
    EX: ALTER TABLE users ADD firstName varchar(255) AFTER id;

=> ALTER TABLE tableName DROP filedName;
    EX: ALTER TABLE users DROP username;

=> ALTER TABLE tablName CHANGE oldFieldName NewFieldName type postion; // CHANGE THE FILED {NAME, TYPE, POSTION? ..}
    EX: ALTER TABLE users CHANGE username username varchar(255) AFTER email;

=> ALTER TABLE tableName MODIFY fieldName changes;
    EX: ALTER TABLE users MODIFY username char(20);
        ALTER TABLE users MODIFY username varchar(255) AFTER *****;

Advance Examples:

    => ALTER TABLE users CONVERT TO CHARACTER SET utf8; // CHANGE TABLE CHARSET AND THEIR COLUMNS

    => ALTER TABLE users
            MODIFY username varchar(200),
            CHANGE id iduser tinyint(1) FIRST;

    => ALTER TABLE users RENAME newusers;

===============================================================


